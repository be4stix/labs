using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows.Forms;
using библиотекаМетодовРоботаНаСтруктуреПоле;
using библиотекаФормированияСред;

namespace решениеЗадачиИспВизРобот
{
    static class Program
    {
        static инфоРобот робот;
        static построительСреды построитель = new построительСреды();
        static ситуацияНаПоле поле;
        /*
         *    Задача № 1 Операторы while и if
         *    Робот в замкнутом прямоугольнике, но вне «комнаты», находящейся в том же прямоугольнике.
         *    Робот вошел в «комнату».
         *      Робот - в первой клетке «комнаты», расположенной сразу у входа. (Она будет помечена на изображении буквой К.)
         *      
         *       Определение 1 : «Комната» - это прямоугольный огороженный со всех сторон участок поля, имеющий одну «дверь».
         *       
         *       Определение 2 : «Дверь» - это одноклеточный проход в горизонтальной или вертикальной стене.
         */

        /// <summary>
        /// Главная точка входа для приложения.
        /// </summary>
        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            поле = построитель.построительСредыРобота("if", 2);
            //Application.Run(new средаРобота(поле));
            
            робот = new инфоРобот(поле);
            решениеЗадачи1группы2();
            поле = робот.результатРаботы;
            Application.Run(new средаРобота(поле));
            
        }  
        // Пример решения задачи 1 из группы 2 
        static ситуацияНаПоле решениеЗадачи1группы2()
        {
            вСЗуголПоля();
            надСЗуголКомнаты();   // Пропущен частный случай возможного наличия двери в первой клетке верхней стены
            исследованиеСтенКомнаты();
            робот.конечнаяТочкаРобота();
            return робот.результатРаботы;
        }
        static void вСЗуголПоля()
        {
            while (робот.сверхуСвободно)
            {
                робот.вверх();
            }
            while (робот.слеваСвободно)
            {
                робот.влево();
            }
            while (робот.сверхуСвободно)
            {
                робот.вверх();
            }
        }
        static void надСЗуголКомнаты()
        {
            поиск_В_Ряду();
            while (робот.снизуСвободно)
            {
                возврат();
                робот.вниз();
                поиск_В_Ряду();                
            }
        }
        static void поиск_В_Ряду()
        {
            while (робот.справаСвободно && робот.снизуСвободно)
            {
                робот.вправо();
            }
        }
        static void возврат()
        {
            while (робот.слеваСвободно)
            {
                робот.влево();
            }
        }
        static void исследованиеСтенКомнаты()
        {
            поискДвери_в_ВерхнейСтене();
            if (робот.слеваСтена)
            {
                поискДвери_в_ПравойСтене(); // Перейти на исследование правой стены комнаты
                if (робот.сверхуСтена)
                {
                    поискДвери_в_НижнейСтене();
                    if (робот.справаСтена)
                    {
                        поискДвери_в_ЛевойСтене();
                    }
                }
                else
                {
                    робот.вправо();
                    if (робот.сверхуСвободно)
                    {// Это вторая клетка от правой стены
                        робот.влево();
                    }
                    else
                    { // Пропущена дверь в последней клетке нижней стены 
                        робот.вправо();
                        робот.вверх(); // Робот в комнате
                    }
                }
            }
            else
            {
                робот.вниз();
                if (робот.слеваСвободно)
                {// Это вторая клетка от верхней стены
                    робот.вверх();
                }
                else
                { // Мы пропустили дверь в первой клетке правой стены
                    робот.вверх();
                    робот.влево();   // Робот в комнате
                }
            }          
        }
        static void поискДвери_в_ВерхнейСтене()
        {
            while (робот.снизуСтена)
            {
                робот.вправо();
            }
            робот.вниз();
        }
        static void поискДвери_в_ПравойСтене()
        {
            while (робот.слеваСтена)
            {
                робот.вверх();
            }
            робот.влево();
        }
        static void поискДвери_в_НижнейСтене()
        {
            while (робот.сверхуСтена)
            {
                робот.влево();
            }
            робот.вверх();
        }
        static void поискДвери_в_ЛевойСтене()
        {
            while (робот.справаСтена)
            {
                робот.вверх();
            }
            робот.вправо();
        }












        // Пример решения задачи 1 группы 1
        static ситуацияНаПоле решениеЗадачи1()
        {
            закраситьДоСтены();
            обойтиСтену();
            закраситьДоСтены();
            робот.закрасить();
            робот.вверх();
            while (робот.справаСвободно)
            {                
                робот.вправо();
                робот.вниз();
                робот.закрасить();
                робот.вверх();
            }
            робот.вниз();
            while (робот.клеткаЗакрашена)
            {
                робот.вверх();
                робот.влево();
                робот.вниз();
            }
            робот.вправо();
            робот.конечнаяТочкаРобота();
            return робот.результатРаботы;
        }
        // Вспомогательные подпрограммы к решению задачи 1
        static void закраситьДоСтены()
        {
            робот.закрасить();
            while (робот.справаСвободно)
            {
                робот.вправо();
                робот.закрасить();
            }
        }
        static void обойтиСтену()
        {
            робот.вверх();
            робот.вправо();
            робот.вниз();
        }        
    }
}
