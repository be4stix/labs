using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace решениеЗадачи_01
{
    /*   Дан текстовый файл Inlet.in, содержащий строковые величины S. В последней его строке 
     * находится символьная величина Symbol.
     *   Подсчитать число вхождений указанного символа, в предпоследние слова введенных литерных величин. 
     * Если этого сделать нельзя, значением результата положить –1.
     * 
     *     Определение. Слово - это последовательность символов строковой величины, не содержащая в себе символ пробела.
     *     
     *     Спецификация ввода (файл Inlet.in):
     *        Строковая величина
     *        Строковая величина
     *        . . . . . . . . . . . . . . . . . . . . .
     *        Строковая величина
     *        Символьная величина
     *     Спецификация вывода (файл Outlet.out):
     *        Количество вхождений или -1
     * 
     */
    class Program
    {
        static StreamReader ФайлIn = new StreamReader("Inlet.in");
        static StreamWriter ФайлOut = new StreamWriter("Outlet.out");

        static void Main(string[] args)
        {
            int N;
            string[] предпоследнееСловоСтроки;
            char буква;
            предпоследнееСловоСтроки = вводДанных(out N, out буква);
            int количествоВхождений = подсчетБукв(предпоследнееСловоСтроки, буква);
            ФайлOut.Write(количествоВхождений);
            ФайлOut.Close();
        }
        static string[] вводДанных(out int N, out char буква)
        {
            char[] разделителиПредложений = { '\n', '\r' };
            char[] разделителиСлов = {' '};
            string[] предложение = ФайлIn.ReadToEnd().Split(разделителиПредложений,System.StringSplitOptions.RemoveEmptyEntries);
            N = предложение.Length - 1;
            string[] искомоеСлово = new string[N];
            буква = char.Parse(предложение[N]);
            for (int i = 0; i < N; i++)
            {                
                string[] слово_i_Предложения = предложение[i].Split(разделителиСлов, System.StringSplitOptions.RemoveEmptyEntries);
                if (слово_i_Предложения.Length>1)
                {
                    искомоеСлово[i] = слово_i_Предложения[слово_i_Предложения.Length-2];
                }
                else
                    искомоеСлово[i] = "";
                
            }
            return искомоеСлово;
        }
        static int подсчетБукв(string[] предпоследнееСловоСтроки, char буква)
        {
            int количество = -1;
            foreach (string слово in предпоследнееСловоСтроки)
                if (слово == "") // Ничего делать не надо
                {
                }
                else // Подсчет букв
                {
                    if (количество == -1) количество = 0;
                    foreach (char букваСлова in слово)
                        количество += буква == букваСлова ? 1 : 0;
                }
            return количество;
        }
    }
}
