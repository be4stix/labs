using System;
using System.IO;

namespace построениеКлассаВектор_задача01
{
    /// <summary>
    /// Класс формирования файлов данных для решения задачи по теме "Класс Вектор"
    /// </summary>
    public class ФормировательФайлаДанныхЗадачи01
    {
        int C;
        int[] вектор;
        Random СЧ = new Random();

        /*
         *    Данные необходимо сформировать в файл Inlet.in в соотвествии со следующей легендой:
         *          Ввод (файл Inlet.in):
         *              С
         *              Элементы массива А по одному в строке
         *              
         *    Предусмотрим следующие варианты тестов:
         *       1. С = 1 - должен быть сформирован массив состоящий только из одного элемента - элемента с индексом 1
         *       2. С = 0 - критическая ситуация - ответ единственный элемент - элемент с интексом  0
         *       3. С = n-1 - критическая ситуация - ответ единственный элемент - элемент с индексом  n-1
         *       4. С = любое отрицательное - экстремальное значение - сгенерировать исключение
         *       5. С = значение большее, чем размерность массива - сгенерировать исключение
         *       6. С = любое положительное в пределах до размера вектора
         *       7. критическая ситуация - С^0 = 1 - один элемент с индексом 1
         *       8. экстремальная ситуация - файл пустой.
         *       
         */
        /// <summary>
        /// Конструктор класса формирования набора данных в файл Inlet.in для работы с объектами класса Вектор задача 01
        /// </summary>
        /// <param name="вариантТестФайла">
        /// 1 - для формирования объектом одно элементного вектора из элемента вектор[1]
        /// 2 - для формирования объектом одно элементного вектора из элемента вектор[0]
        /// 3 - для формирования объектом одно элементного вектора из элемента вектор[n-1]
        /// 4 - для проверки реагирования программы на исключение
        /// 5 - для проверки реагирования программы на исключение
        /// 6 - для формирования объектом много элементного вектора из элементов вектор-объекта</param>
        public ФормировательФайлаДанныхЗадачи01(int вариантТестФайла)
        {
            StreamWriter файлЫВ = new StreamWriter("Inlet.in");
            вектор = new int[СЧ.Next(1, 2017)];
            for (int i = 0; i < вектор.Length; i++)
            {
                вектор[i] = СЧ.Next(-1000, 1000);
            }
            switch (вариантТестФайла)
            {
                case 1: //С = 1 - должен быть сформирован массив состоящий только из одного элемента - элемента с индексом 1
                    C = 1;                    
                    break;
                case 2: //С = 0 - должен быть сформирован массив состоящий только из одного элемента - элемента с индексом 0
                    C = 0;
                    break;
                case 3: //С = n-1 - должен быть сформирован массив состоящий только из одного элемента - элемента с индексом n-1
                    C = вектор.Length-1;
                    break;
                case 4: //С < 0 - 
                    C = -СЧ.Next(1, 2017);
                    break;
                case 5: //С >=вектор.Length 
                    C = вектор.Length + СЧ.Next(1, 10);
                    break;
                case 6: //С - любое допустимое, положительное
                    C = СЧ.Next(2, вектор.Length/10);
                    break;
                case 7: //С - любое, но вектора нет. Записать С в файл и тут же выйти из метода
                    C = СЧ.Next(2, вектор.Length);
                    файлЫВ.Write(C);
                    файлЫВ.Close();
                    return;
                default: // Файл - пустой - экстремальная ситуация при обработке объекта Вектор
                    файлЫВ.Close();
                    return;
            }
            файлЫВ.WriteLine(C);
            for (int i = 0; i < вектор.Length-1; i++)
            {
                файлЫВ.WriteLine(вектор[i]);
            }
            файлЫВ.Write(вектор[вектор.Length - 1]);
            файлЫВ.Close();
        }
    }
}
