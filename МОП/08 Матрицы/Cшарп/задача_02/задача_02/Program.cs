using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace задача_02
{
    /*
     *    Текстовый файл Inlet.in содержит целочисленные значения : N, M ( размерности массива A[0..N-1, 0..M-1]),
     *       CЗ – значение элемента A[0, 0],
     *       CВ – значение элемента A[0, M-1],
     *       ЮЗ – значение элемента A[N-1, 0] и
     *       ЮВ – значение элемента A[N-1, M-1].
     *    Заполнить элементы массива А теми значениями угловых элементов массива, которые расположены к ним ближе всего. 
     *  Если несколько угловых элементов равноудалены от данного элемента массива, то заполнить его суммой всех 
     *  соотвествующих угловых элементов. Результат решения задачи внести в файл Outlet.out.
     *  
     *          Спецификация ввода (файл Inlet.in):
     *             N M СЗ СВ ЮЗ ЮВ
     *          
     *          Спецификация вывода (файл Outlet.out):
     *             Значения элементов построенного массива по строкам
     */
    class Program
    {
        static StreamReader файлВВ = new StreamReader("Inlet.in");
        static StreamWriter файлЫВ = new StreamWriter("Outlet.out");
        static void Main(string[] args)
        {
            string[] N_M_ = файлВВ.ReadLine().Trim().Split(' ');
            int N = int.Parse(N_M_[0]);
            int M = int.Parse(N_M_[1]);
            int СЗ = int.Parse(N_M_[2]);
            int СВ = int.Parse(N_M_[3]);
            int ЮЗ = int.Parse(N_M_[4]);
            int ЮВ = int.Parse(N_M_[5]);
            for (int i = 0; i < N; i++)
            {
                string строка = "";
                if (i + 1 <= N / 2)
                {// Верхняя часть матрицы - использовать СЗ и СВ "углы"
                    for (int j = 0; j < M; j++)
                    {
                        if (j + 1 <= M / 2)
                        {// СЗ - угол
                            строка = строка + СЗ.ToString() + " ";
                        }
                        else
                        {
                            if (M % 2 == 1 && j == M / 2)
                            { // "Серединный" столбец
                                строка = строка + (СЗ+СВ).ToString() + " ";
                            }
                            else
                            { // СВ - угол
                                строка = строка + СВ.ToString() + " ";
                            }
                        }
                    }
                }
                else
                {
                    if (N % 2 == 1 && i == N / 2)
                    {// "Серединная" строка - использовать сумму СЗ и ЮЗ, а затем СВ и ЮВ углов, 
                     // если же и М - нечетная , то "цетральный" элемент - среднее всех углов
                        for (int j = 0; j < M; j++)
                        {
                            if (j + 1 <= M / 2)
                            {// СЗ - угол
                                строка = строка + (СЗ+ЮЗ).ToString() + " ";
                            }
                            else
                            {
                                if (M % 2 == 1 && j == M / 2)
                                { // "Серединный" столбец
                                    строка = строка + (СЗ + СВ + ЮЗ + ЮВ).ToString() + " ";
                                }
                                else
                                { // СВ - угол
                                    строка = строка + (СВ + ЮВ).ToString() + " ";
                                }
                            }
                        }
                    }
                    else
                    {// Нижняя часть матрицы - использовать ЮЗ и ЮВ "углы"
                        for (int j = 0; j < M; j++)
                        {
                            if (j + 1 <= M / 2)
                            {// ЮЗ - угол
                                строка = строка + ЮЗ.ToString() + " ";
                            }
                            else
                            {
                                if (M % 2 == 1 && j == M / 2)
                                { // "Серединный" столбец
                                    строка = строка + (ЮЗ + ЮВ).ToString() + " ";
                                }
                                else
                                { // ЮВ - угол
                                    строка = строка + ЮВ.ToString() + " ";
                                }
                            }
                        }
                    }
                }
                if (i != N - 1)
                {// Это не последняя строка
                    файлЫВ.WriteLine(строка.Trim());
                }
                else
                { // Это последняя строка
                    файлЫВ.Write(строка.Trim());
                }
            }
            файлЫВ.Close();
        }
    }
}
